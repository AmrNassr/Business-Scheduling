/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hossam;
import java.awt.ComponentOrientation;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;

/**
 *
 * @author amnassar
 */
public final class vacations extends javax.swing.JInternalFrame {

    /**
     * Creates new form book
     */
     Connection con ;
     PreparedStatement pst ;
     ResultSet rs;
     public String y ;
     public String datee;
     public  Calendar cal;
     String dayyy ;
    
   
    public vacations(String x )throws IOException, ParseException {
        initComponents();
        con=DBConnect.connect();
         clear();
         tablelord();
         names();
         AutoCompleteDecorator.decorate(cmname);
          TableCellRenderer rendererFromHeader = tdetails.getTableHeader().getDefaultRenderer();
JLabel headerLabel = (JLabel) rendererFromHeader;
headerLabel.setHorizontalAlignment(JLabel.CENTER);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        tdetails.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
         tdetails.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
         tdetails.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );
         tdetails.getColumnModel().getColumn(3).setCellRenderer( centerRenderer ); 
         tdetails.getColumnModel().getColumn(4).setCellRenderer( centerRenderer ); 
          cal = new GregorianCalendar();
              int month=cal.get(Calendar.MONTH)+1;
             int year = cal.get(Calendar.YEAR);
                 int dayy =cal.get(Calendar.DAY_OF_MONTH);
             dayyy=String.valueOf(dayy);
 if(dayy == 1 || dayy == 2 || dayy == 3 || dayy == 4
         || dayy == 5 || dayy == 6 || dayy == 7 || dayy == 8 || dayy == 9 )
 {
      dayyy=String.valueOf(dayy);
     dayyy="0"+dayyy;
 }
           date1.setText(year+"-"+month+"-"+dayyy);
           datee=date1.getText().toString();
           if(x.equals("admin"))
        {
            save2.setEnabled(true);
          
        }
 
      }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel16 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tdetails = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        cmname = new javax.swing.JComboBox();
        to = new com.toedter.calendar.JDateChooser();
        from = new com.toedter.calendar.JDateChooser();
        save2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        comment = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        save1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        serialid = new javax.swing.JLabel();
        date1 = new javax.swing.JLabel();
        name1 = new javax.swing.JLabel();
        from1 = new javax.swing.JLabel();
        to1 = new javax.swing.JLabel();
        fulldate1 = new javax.swing.JLabel();

        jLabel16.setFont(new java.awt.Font("Sitka Text", 3, 24)); // NOI18N
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/71847608-close-up-of-handshake-on-city-background-with-abstract-sunlight-partnership-concept-double-exposure.jpg"))); // NOI18N

        setMaximumSize(new java.awt.Dimension(980, 690));
        setMinimumSize(new java.awt.Dimension(980, 690));
        setPreferredSize(new java.awt.Dimension(980, 690));

        jPanel10.setBackground(new java.awt.Color(0, 0, 0));
        jPanel10.setForeground(new java.awt.Color(255, 255, 255));
        jPanel10.setMinimumSize(new java.awt.Dimension(90, 34));
        jPanel10.setPreferredSize(new java.awt.Dimension(970, 690));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tdetails.setBackground(new java.awt.Color(156, 166, 187));
        tdetails.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tdetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "From", "To", "Date", "Comment"
            }
        ));
        tdetails.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tdetails.setRowHeight(25);
        tdetails.setRowMargin(2);
        tdetails.setSelectionBackground(new java.awt.Color(204, 255, 255));
        tdetails.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tdetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tdetailsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tdetails);
        if (tdetails.getColumnModel().getColumnCount() > 0) {
            tdetails.getColumnModel().getColumn(4).setMinWidth(300);
            tdetails.getColumnModel().getColumn(4).setPreferredWidth(300);
            tdetails.getColumnModel().getColumn(4).setMaxWidth(300);
        }

        jPanel10.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 920, 260));

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel17.setText("Comment");
        jPanel10.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 120, -1));

        cmname.setEditable(true);
        cmname.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        jPanel10.add(cmname, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 230, 30));

        to.setDateFormatString("yyyy-MM-dd");
        jPanel10.add(to, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 230, 30));

        from.setDateFormatString("yyyy-MM-dd");
        jPanel10.add(from, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 230, 30));

        save2.setBackground(new java.awt.Color(156, 166, 187));
        save2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        save2.setText("Delete");
        save2.setEnabled(false);
        save2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save2ActionPerformed(evt);
            }
        });
        jPanel10.add(save2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 540, 180, 40));

        comment.setColumns(20);
        comment.setRows(5);
        jScrollPane2.setViewportView(comment);

        jPanel10.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, 270, 80));

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel13.setText("To");
        jPanel10.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 100, -1));

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel14.setText("From");
        jPanel10.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 100, -1));

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel15.setText("Name");
        jPanel10.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 100, -1));

        save1.setBackground(new java.awt.Color(156, 166, 187));
        save1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        save1.setText("Add");
        save1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save1ActionPerformed(evt);
            }
        });
        jPanel10.add(save1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 140, 180, 40));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/nYwGq3.jpg"))); // NOI18N
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 0), 2));
        jPanel10.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 720));

        serialid.setText("jLabel1");
        jPanel10.add(serialid, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 650, -1, -1));

        date1.setText("jLabel1");
        jPanel10.add(date1, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 80, -1, -1));

        name1.setText("name1");
        jPanel10.add(name1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 50, -1, -1));

        from1.setText("jLabel3");
        jPanel10.add(from1, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 80, -1, -1));

        to1.setText("jLabel4");
        jPanel10.add(to1, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 100, -1, -1));

        fulldate1.setText("jLabel1");
        jPanel10.add(fulldate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 190, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 964, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save1ActionPerformed
         try {
             TimeZone tz = TimeZone.getTimeZone("GMT+02");
             Calendar c = Calendar.getInstance(tz);
             String time = String.format("%02d" , c.get(Calendar.HOUR_OF_DAY))+":"+
                     String.format("%02d" , c.get(Calendar.MINUTE));
             String fulldatee=datee+" "+time;
             String fromm=((JTextField)from.getDateEditor().getUiComponent()).getText();
             String too=((JTextField)to.getDateEditor().getUiComponent()).getText();
              String name= cmname.getSelectedItem().toString();
             String commentt= comment.getText();
             SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
             Date date1 = sdf.parse(fromm);
             Date date2 = sdf.parse(too);
             int result = date1.compareTo(date2);
             if(result <0 || result == 0){
                 int dialogButton = JOptionPane.YES_NO_OPTION;
             int dialogResult = JOptionPane.showConfirmDialog(this, "Save ?", "Confirmation", dialogButton);
             if(dialogResult == 0) {
                 try {
                     String sqll3 = "INSERT INTO `hossam`.`vacations` (`name`, `from`, `to`, `date`, `comment`) VALUES"
                             + " ('"+name+"','"+fromm+"','"+too+"','"+fulldatee+"','"+commentt+"')";
                     pst = (PreparedStatement)con.prepareStatement(sqll3);
                     pst.execute();
                     String sqll4 = "INSERT INTO `hossam`.`logs` (`name`, `date`, `fulldate`, `type`,`comment`) VALUES"
                             + " ('"+name+"','"+fromm+"','"+fulldatee+"','بداية الاجازة','"+commentt+"')";
                     pst = (PreparedStatement)con.prepareStatement(sqll4);
                     pst.execute();
                     String sqll5 = "INSERT INTO `hossam`.`logs` (`name`, `date`, `fulldate`, `type`,`comment`) VALUES"
                             + " ('"+name+"','"+too+"','"+fulldatee+"','رجوع من الاجازة','"+commentt+"')";
                     pst = (PreparedStatement)con.prepareStatement(sqll5);
                     pst.execute();
                     JOptionPane.showMessageDialog(this, "Added Successfully");
                     tablelord();
                     clear();
                 } catch (SQLException ex) {
                     JOptionPane.showMessageDialog(this, ex);
                 }
             }
             else
             {
                 JOptionPane.showMessageDialog(null,"Canceled");
             }
             }
             else
             {
                  JOptionPane.showMessageDialog(null,"Wrong Date");
             }
             
         } catch (ParseException ex) {
             Logger.getLogger(vacations.class.getName()).log(Level.SEVERE, null, ex);
         }

     
    }//GEN-LAST:event_save1ActionPerformed

    private void tdetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tdetailsMouseClicked
        DefaultTableModel tmodel =(DefaultTableModel)tdetails.getModel();
        int selectrowindex=tdetails.getSelectedRow();
        name1.setText(tmodel.getValueAt(selectrowindex, 0).toString());
       
        fulldate1.setText(tmodel.getValueAt(selectrowindex, 3).toString());
    }//GEN-LAST:event_tdetailsMouseClicked

    private void save2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save2ActionPerformed
        if(!name1.getText().trim().isEmpty()  || !fulldate1.getText().trim().isEmpty())
        {int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "Save ?", "Confirmation", dialogButton);
            if(dialogResult == 0) {
                try {
                    String sql = " DELETE FROM hossam.vacations WHERE name='"+name1.getText()+"' AND date='"+fulldate1.getText()+"' ";
                    pst=(PreparedStatement) con.prepareStatement(sql);
                    pst.execute();
                    String sql1= " DELETE FROM hossam.logs WHERE fulldate='"+fulldate1.getText()+"' and name='"+name1.getText()+"' ";
                    pst=(PreparedStatement) con.prepareStatement(sql1);
                    pst.execute();
                    tablelord();
                    clear();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, ex);
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Canceled");
            }}
    }//GEN-LAST:event_save2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmname;
    private javax.swing.JTextArea comment;
    private javax.swing.JLabel date1;
    private com.toedter.calendar.JDateChooser from;
    private javax.swing.JLabel from1;
    private javax.swing.JLabel fulldate1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel name1;
    private javax.swing.JButton save1;
    private javax.swing.JButton save2;
    private javax.swing.JLabel serialid;
    private javax.swing.JTable tdetails;
    private com.toedter.calendar.JDateChooser to;
    private javax.swing.JLabel to1;
    // End of variables declaration//GEN-END:variables
public void clear()
{
    cmname.setSelectedIndex(0);
    name1.setText("");
    comment.setText("");
    fulldate1.setText("");

}
public void tablelord()
{
    try {
           String sqll = "SELECT * FROM hossam.vacations order by id DESC";
              pst=(PreparedStatement) con.prepareStatement(sqll);
            rs=pst.executeQuery();
            DefaultTableModel model =(DefaultTableModel)tdetails.getModel(); 
                model.setRowCount(0);
              int k = 0;
                while (rs.next())
                {
                    Object row[] = {
                        rs.getString("name"),
                        rs.getString("from"),
                        rs.getString("to"),
                        rs.getString("date"),
                    rs.getString("comment"),
                    
                    
                   
                 
                                };
                    model.addRow(row);
                    k++;
                }
                for(int i = k ;i<11;i++)
                {
                 Object rowData[] = {
                       "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                       };
                model.addRow(rowData);
                } 
        }
        catch (SQLException ex) {
            
        }
}
  public void names()
   {
        try {
             String sql="SELECT name  FROM hossam.people order by name ";
             pst=(PreparedStatement) con.prepareStatement(sql);
             rs=pst.executeQuery();
             while(rs.next()){
                String name = rs.getString("name");
                
                cmname.addItem(name);
  
             }

         } catch (SQLException ex) {
             
         }
   }
    
     
}
